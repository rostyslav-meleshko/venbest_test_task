{"version":3,"sources":["constants.js","components/User.js","components/UsersList.js","components/FilterList.js","components/NewUserForm.js","App.js","api.js","index.js"],"names":["NAME","LASTNAME","AGE","SEX","MALE","FEMALE","REG_AGE_INPUT","User","user","UsersList","users","className","length","map","Date","name","FilterList","filterQuery","handleFilterQueryChange","clearfilterQuery","onSubmit","event","preventDefault","type","value","onChange","checked","onClick","NewUserForm","adduser","useState","inputs","setInputs","handleChange","target","test","key","prevInputs","newUser","useMemo","isFormValid","Object","values","every","Boolean","min","placeholder","disabled","App","setUsers","isErrorOccured","setIsErrorOccured","setFilterQuery","getusersFromServer","a","fetch","then","response","ok","Error","status","statusText","json","usersFromServer","useEffect","filteredusers","tempusers","trim","filter","toLowerCase","includes","prevfilterQuery","newuser","prevusers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAaA,EAAO,OACPC,EAAW,WACXC,EAAM,MACNC,EAAM,MACNC,EAAO,IACPC,EAAS,IACTC,EAAgB,a,OCHhBC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,+CACMA,EAAI,KADV,YACoBA,EAAI,UADxB,IACsC,uBADtC,sDAEeA,EAAI,KAFnB,IAE4B,uBAF5B,8BAGWA,EAAI,MAAUJ,EAAO,6CAAY,kDCLnCK,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE1B,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,iIACCD,EAAME,OACJ,oBAAID,UAAU,aAAd,SACAD,EAAMG,KAAI,SAAAL,GAAI,OACb,oBAEEG,UAAU,kBAFZ,SAIE,cAAC,EAAD,CAAMH,KAAMA,MAHL,IAAIM,KAASN,EAAKO,WAO5B,oBAAIJ,UAAU,2BAAd,sQChBIK,EAAa,SAAC,GAEpB,IADLC,EACI,EADJA,YAAaC,EACT,EADSA,wBAAyBC,EAClC,EADkCA,iBAGtC,OACE,qBAAKR,UAAU,MAAf,SACA,uBAAMS,SAAU,SAACC,GAAD,OAAWA,EAAMC,kBAAjC,UACE,oBAAIX,UAAU,cAAd,uFACA,sBAAKA,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,gCAGA,uBACEY,KAAK,OACLZ,UAAU,eACVI,KAAMf,EACNwB,MAAOP,EAAW,KAClBQ,SAAUP,OAId,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,wDACA,uBACEY,KAAK,OACLZ,UAAU,eACVI,KAAMd,EACNuB,MAAOP,EAAW,SAClBQ,SAAUP,OAId,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,wDACA,uBACEY,KAAK,OACLZ,UAAU,eACVI,KAAMb,EACNsB,MAAOP,EAAW,IAClBQ,SAAUP,OAId,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,gCACA,sBAAKA,UAAU,eAAf,UACA,wBAAOA,UAAU,yBAAjB,UACE,uBACEY,KAAK,QACLC,MAAOpB,EACPW,KAAMZ,EACNuB,QAAST,EAAW,MAAUb,EAC9BqB,SAAUP,IAEZ,sBAAMP,UAAU,OAAhB,2DAEF,wBAAOA,UAAU,eAAjB,UACE,uBACEY,KAAK,QACLC,MAAOnB,EACPU,KAAMZ,EACNuB,QAAST,EAAW,MAAUZ,EAC9BoB,SAAUP,IAEZ,sBAAMP,UAAU,OAAhB,iEAKJ,qBAAKA,UAAU,gCAAf,SACE,wBACEY,KAAK,SACLZ,UAAU,kBACVgB,QAAS,kBAAMR,KAHjB,2GCtEKS,EAAc,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QAAc,EACdC,oBAAQ,mBACjC9B,EAAO,IAD0B,cAEjCC,EAAW,IAFsB,cAGjCC,EAAM,IAH2B,cAIjCC,EAAM,IAJ2B,IADM,mBACnC4B,EADmC,KAC3BC,EAD2B,KAQpCC,EAAe,SAACZ,GAAW,IAAD,EACRA,EAAMa,OAArBnB,EADuB,EACvBA,KAAMS,EADiB,EACjBA,OAEVT,IAASb,GAASI,EAAc6B,KAAKX,IAAwB,KAAdH,EAAMe,MAIxDJ,GAAU,SAACK,GAAD,mBAAC,eACNA,GADK,kBAEPtB,EAAOS,QAINc,EAAUC,mBAAQ,WACtB,OAAOR,IACN,CAACA,IAgBES,EAAcD,mBAAQ,WAC1B,OAAOE,OAAOC,OAAOX,GAAQY,MAAMC,UAAYb,EAAM,KAAS,KAC7D,CAACA,IAEJ,OACE,qBAAKpB,UAAU,MAAf,SACA,uBAAMS,SApBa,SAACC,GAGF,IAAD,GAFjBA,EAAMC,iBAEFkB,KACFX,EAAQS,GACRN,GAAS,mBACNhC,EAAO,IADD,cAENC,EAAW,IAFL,cAGNC,EAAM,IAHA,cAINC,EAAM,IAJA,MAeX,UACE,oBAAIQ,UAAU,cAAd,qHACA,sBAAKA,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,gCAGA,uBACEY,KAAK,OACLZ,UAAU,eACVI,KAAMf,EACNwB,MAAOO,EAAM,KACbN,SAAUQ,OAGd,sBAAKtB,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,wDACA,uBACEY,KAAK,OACLZ,UAAU,eACVI,KAAMd,EACNuB,MAAOO,EAAM,SACbN,SAAUQ,OAGd,sBAAKtB,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,wDACA,uBACEY,KAAK,SACLsB,IAAK,GACLC,YAAY,wGACZnC,UAAU,eACVI,KAAMb,EACNsB,MAAOO,EAAM,IACbN,SAAUQ,OAId,sBAAKtB,UAAU,mBAAf,UACE,sBAAMA,UAAU,4BAAhB,gCACA,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,yBAAjB,UACE,uBACEY,KAAK,QACLC,MAAOpB,EACPW,KAAMZ,EACNuB,QAASK,EAAM,MAAU3B,EACzBqB,SAAUQ,IACZ,sBAAMtB,UAAU,OAAhB,2DAEF,wBAAOA,UAAU,eAAjB,UACE,uBACEY,KAAK,QACLC,MAAOnB,EACPU,KAAMZ,EACNuB,QAASK,EAAM,MAAU1B,EACzBoB,SAAUQ,IACZ,sBAAMtB,UAAU,OAAhB,iEAKN,qBAAKA,UAAU,gCAAf,SACC6B,EACI,wBACCjB,KAAK,SACLZ,UAAU,kBAFX,uIAOD,wBACEY,KAAK,SACLZ,UAAU,iBACVoC,UAAQ,EAHV,oIClBKC,EA7FH,WAAO,IAAD,IACUlB,mBAAS,IADnB,mBACTpB,EADS,KACFuC,EADE,OAE4BnB,oBAAS,GAFrC,mBAEToB,EAFS,KAEOC,EAFP,OAGsBrB,oBAAQ,mBAC3C9B,EAAO,IADoC,cAE3CC,EAAW,IAFgC,cAG3CC,EAAM,IAHqC,cAI3CC,EAAM,IAJqC,IAH9B,mBAGTc,EAHS,KAGImC,EAHJ,KAUVC,EAAkB,uCAAG,4BAAAC,EAAA,+EChBpBC,MAAM,uCACRC,MAAK,SAAAC,GAER,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UDSS,OAEjBC,EAFiB,OAGvBd,EAASc,GAHc,gDAKvBZ,GAAkB,GALK,yDAAH,qDASxBa,qBAAU,WACRX,MACC,IAEH,IAmBMY,EAAgB1B,mBAAQ,WAC5B,IAAI2B,EAAS,YAAOxD,GAoBpB,OAlBIO,EAAW,KAAOkD,OAAOvD,OAAS,IACpCsD,EAAYA,EAAUE,QAAO,SAAA5D,GAAI,OAC/BA,EAAI,KAAO6D,cAAcC,SAASrD,EAAW,KAAOkD,OAAOE,mBAG3DpD,EAAW,SAAWkD,OAAOvD,OAAS,IACxCsD,EAAYA,EAAUE,QAAO,SAAA5D,GAAI,OAC/BA,EAAI,SAAW6D,cAAcC,SAASrD,EAAW,SAAWkD,OAAOE,mBAGnEpD,EAAW,IAAMkD,OAAOvD,OAAS,IACnCsD,EAAYA,EAAUE,QAAO,SAAA5D,GAAI,OAAIA,EAAI,OAAWS,EAAW,IAAMkD,WAGnElD,EAAW,IAAMkD,OAAOvD,OAAS,IACnCsD,EAAYA,EAAUE,QAAO,SAAA5D,GAAI,OAAIA,EAAI,MAAUS,EAAW,QAGzDiD,IACN,CAACjD,EAAaP,IAMjB,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CACEO,wBAnDwB,SAAC,GAAc,IAAbgB,EAAY,EAAZA,OACzBnB,EAAemB,EAAfnB,KAAMS,EAASU,EAATV,MAEb4B,GAAe,SAACmB,GAAD,mBAAC,eACXA,GADU,kBAEZxD,EAAOS,QA+CJP,YAAaA,EACbE,iBA3CiB,WAAO,IAAD,EAC7BiC,GAAc,mBACXpD,EAAO,IADI,cAEXC,EAAW,IAFA,cAGXC,EAAM,IAHK,cAIXC,EAAM,IAJK,OA4CV,cAAC,EAAD,CAAa0B,QAZH,SAAC2C,GACfvB,GAAS,SAACwB,GAAD,4BAAmBA,GAAnB,CAA8BD,aAarC,qBAAK7D,UAAU,MAAf,SACIuC,EAGI,oBAAIvC,UAAU,0BAAd,gPAFF,cAAC,EAAD,CAAWD,MAAOuD,UEnF9BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5109616b.chunk.js","sourcesContent":["export const NAME = 'name';\nexport const LASTNAME = 'lastname';\nexport const AGE = 'age';\nexport const SEX = 'sex';\nexport const MALE = 'm';\nexport const FEMALE = 'f';\nexport const REG_AGE_INPUT = /^[0-9\\b]+$/;","import React from 'react';\nimport { MALE, NAME, LASTNAME, AGE, SEX } from '../constants';\n\nexport const User = ({ user }) => {\n  return (\n    <>\n      {`${user[NAME]} ${user[LASTNAME]}`} <br />\n      {`Возраст: ${user[AGE]}`} <br />\n      {`Пол: ${user[SEX] === MALE ? 'Мужской' : 'Женский'}`}\n    </>\n  );\n};\n","import React from 'react';\nimport { User } from './User';\n\nexport const UsersList = ({ users }) => {\n\n  return (\n    <div className=\"col\">\n      <h1 className='text-center'>Список пользователей</h1> \n      {users.length \n      ? (<ul className=\"list-group\">\n        {users.map(user => (\n          <li \n            key={+ new Date() + user.name}\n            className=\"list-group-item\"\n          >\n            <User user={user}/>\n          </li>\n        ))}\n      </ul>)\n      : (<h2 className=\"text-center text-danger \">\n          Нет людей соответствующих введенным фильтрам\n        </h2>\n        )}\n    </div>\n    );\n};\n\n","import React from 'react';\nimport { NAME, LASTNAME, AGE, SEX, MALE, FEMALE } from '../constants.js'\n\nexport const FilterList = ({\n  filterQuery, handleFilterQueryChange, clearfilterQuery\n}) => {\n\n  return (\n    <div className=\"col\">\n    <form onSubmit={(event) => event.preventDefault()}>\n      <h1 className='text-center'>Фильтр списка</h1> \n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">\n          ИМЯ\n        </span>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          name={NAME}\n          value={filterQuery[NAME]}\n          onChange={handleFilterQueryChange}\n        />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ФАМИЛИЯ</span>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          name={LASTNAME}\n          value={filterQuery[LASTNAME]}\n          onChange={handleFilterQueryChange}\n        />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ВОЗРАСТ</span>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          name={AGE}\n          value={filterQuery[AGE]}\n          onChange={handleFilterQueryChange}\n        />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ПОЛ</span>\n        <div className=\"form-control\">\n        <label className=\"radio-inline mr-3 ml-1\">\n          <input\n            type=\"radio\"\n            value={MALE}\n            name={SEX}\n            checked={filterQuery[SEX] === MALE}\n            onChange={handleFilterQueryChange}\n          />\n          <span className=\"ml-1\">Мужской</span>\n        </label>\n        <label className=\"radio-inline\">\n          <input \n            type=\"radio\"\n            value={FEMALE}\n            name={SEX}\n            checked={filterQuery[SEX] === FEMALE}\n            onChange={handleFilterQueryChange}\n          />\n          <span className=\"ml-1\">Женский</span>\n        </label>\n        </div>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n        <button \n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => clearfilterQuery()}\n        >\n          Очистить фильтр\n        </button>\n      </div>\n    </form>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { NAME, LASTNAME, AGE, SEX, MALE, FEMALE, REG_AGE_INPUT } from '../constants';\n\nexport const NewUserForm = ({ adduser }) => {\n  const [inputs, setInputs] = useState({\n    [NAME]: '',\n    [LASTNAME]: '',\n    [AGE]: '',\n    [SEX]: '',\n  });\n\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n\n    if(name === AGE && (!REG_AGE_INPUT.test(value) || event.key === 69)) {\n        return;\n      };\n    \n    setInputs((prevInputs) => ({\n      ...prevInputs,\n      [name]: value,\n    }));\n  };\n\n  const newUser = useMemo(() => {\n    return inputs;\n  }, [inputs]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (isFormValid) {\n      adduser(newUser);\n      setInputs({\n        [NAME]: '',\n        [LASTNAME]: '',\n        [AGE]: '',\n        [SEX]: '',\n      });\n    };\n  };\n\n  const isFormValid = useMemo(() => {\n    return Object.values(inputs).every(Boolean) && inputs[AGE] >= 18;\n  }, [inputs]);\n\n  return (\n    <div className=\"col\">\n    <form onSubmit={handleSubmit}>\n      <h1 className=\"text-center\">Новый пользователь</h1>\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">\n          ИМЯ\n        </span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name={NAME}\n          value={inputs[NAME]}\n          onChange={handleChange} />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ФАМИЛИЯ</span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name={LASTNAME}\n          value={inputs[LASTNAME]}\n          onChange={handleChange} />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ВОЗРАСТ</span>\n        <input\n          type=\"number\"\n          min={18}\n          placeholder=\"Должен быть больше 18\"\n          className=\"form-control\"\n          name={AGE}\n          value={inputs[AGE]}\n          onChange={handleChange}\n            />\n      </div>\n\n      <div className=\"input-group mb-1\">\n        <span className=\"input-group-text fixWidth\">ПОЛ</span>\n        <div className=\"form-control\">\n          <label className=\"radio-inline mr-3 ml-1\">\n            <input\n              type=\"radio\"\n              value={MALE}\n              name={SEX}\n              checked={inputs[SEX] === MALE}\n              onChange={handleChange} />\n            <span className=\"ml-1\">Мужской</span>\n          </label>\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              value={FEMALE}\n              name={SEX}\n              checked={inputs[SEX] === FEMALE}\n              onChange={handleChange} />\n            <span className=\"ml-1\">Женский</span>\n          </label>\n        </div>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n      {isFormValid  \n        ? (<button \n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Добавить пользователя\n          </button> \n        ) : (\n          <button \n            type=\"submit\"\n            className=\"btn btn-danger\"\n            disabled\n          >\n            Все поля обязательны\n          </button> \n        )}\n      </div>\n    </form>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { fetchUsers } from './api';\nimport { UsersList } from './components/UsersList';\nimport { FilterList } from './components/FilterList';\nimport { NAME, LASTNAME, AGE, SEX } from './constants.js'\nimport { NewUserForm } from './components/NewUserForm';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [isErrorOccured, setIsErrorOccured] = useState(false);\n  const [filterQuery, setFilterQuery] = useState({\n    [NAME]: '',\n    [LASTNAME]: '',\n    [AGE]: '',\n    [SEX]: '',\n  })\n\n  const getusersFromServer = async () => {\n    try {\n      const usersFromServer = await fetchUsers();\n      setUsers(usersFromServer);\n    } catch (error) {\n      setIsErrorOccured(true);\n    }\n  }\n\n  useEffect(() => {\n    getusersFromServer();\n  }, []);\n\n  const handleFilterQueryChange = ({target}) => {\n    const {name, value} = target;\n\n    setFilterQuery((prevfilterQuery) => ({\n      ...prevfilterQuery,\n      [name]: value,\n    })\n      )\n  }\n\n  const clearfilterQuery = () => {\n    setFilterQuery({\n      [NAME]: '',\n      [LASTNAME]: '',\n      [AGE]: '',\n      [SEX]: '',\n    })\n  }\n\n  const filteredusers = useMemo(() => {\n    let tempusers = [...users];\n\n    if (filterQuery[NAME].trim().length > 0) {\n      tempusers = tempusers.filter(user => \n        user[NAME].toLowerCase().includes(filterQuery[NAME].trim().toLowerCase()))\n    }\n\n    if (filterQuery[LASTNAME].trim().length > 0) {\n      tempusers = tempusers.filter(user => \n        user[LASTNAME].toLowerCase().includes(filterQuery[LASTNAME].trim().toLowerCase()))\n    }\n\n    if (filterQuery[AGE].trim().length > 0) {\n      tempusers = tempusers.filter(user => user[AGE] === +filterQuery[AGE].trim())\n    }\n\n    if (filterQuery[SEX].trim().length > 0) {\n      tempusers = tempusers.filter(user => user[SEX] === filterQuery[SEX])\n    }\n\n    return tempusers;\n  }, [filterQuery, users])\n\n  const adduser = (newuser) => {\n    setUsers((prevusers) => [...prevusers, newuser] )\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <FilterList \n          handleFilterQueryChange={handleFilterQueryChange} \n          filterQuery={filterQuery} \n          clearfilterQuery={clearfilterQuery}\n        />\n        <NewUserForm adduser={adduser}/>\n      </div>\n      <div className=\"row\">\n        {!isErrorOccured\n          ? <UsersList users={filteredusers} /> \n          : (\n              <h2 className=\"text-center text-danger\">\n                Не удалось загрузить список пользователей\n              </h2>\n            )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const fetchUsers = () => {\n  return fetch('https://venbest-test.herokuapp.com/')\n      .then(response => {\n\n    if(!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`)\n    }\n\n    return response.json()});\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}